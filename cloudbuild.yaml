steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: bash
  args:
    - -c
    - |
      echo "Configuring Docker authentication for Artifact Registry..."
      gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/firestore-adapter/firestore-adapter', '.']

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/firestore-adapter/firestore-adapter']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - firestore-adapter
      - --image
      - ${_REGION}-docker.pkg.dev/$PROJECT_ID/firestore-adapter/firestore-adapter
      - --region
      - ${_REGION}
      - --platform
      - managed
      - --allow-unauthenticated
      - --service-account
      - rhea-app-sa@$PROJECT_ID.iam.gserviceaccount.com
      - --port
      - '8080'

  # Step 4: Wait for deployment to stabilize
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        echo "Waiting for service to stabilize..."
        sleep 30

  # Step 5: Sanity check
  - name: 'curlimages/curl'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Running sanity check..."
        curl -sSf "https://firestore-adapter-317624663818.${_REGION}.run.app/health" || exit 1

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _REGION: europe-west1
