steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/firestore-adapter', '.']

  # Step 2: Push Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/firestore-adapter']

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'firestore-adapter'
      - '--image'
      - 'gcr.io/$PROJECT_ID/firestore-adapter'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - 'rhea-app-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--port'
      - '8080'

  # Step 4: Allow unauthenticated users to invoke the service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - 'firestore-adapter'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--member'
      - 'allUsers'
      - '--role'
      - 'roles/run.invoker'

  # Step 5: Sanity check (FIXED INDENTATION)
  - name: 'curlimages/curl'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Running sanity check..."
        curl -sSf "https://firestore-adapter-317624663818.europe-west1.run.app/health" || exit 1# 

# Use Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY

# Substitutions to keep region configurable
substitutions:
  _REGION: europe-west1
